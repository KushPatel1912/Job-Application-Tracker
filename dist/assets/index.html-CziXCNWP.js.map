{"version":3,"file":"index.html-CziXCNWP.js","sources":["../../src/options/ui/Options.tsx","../../src/options/index.tsx"],"sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  DEFAULT_SHEET_NAME,\n  STORAGE_KEYS,\n} from \"../../shared/types\";\n\n// Form protection: Check and manage saved form data\nfunction useFormProtectionManagement() {\n  const [savedForms, setSavedForms] = useState<Array<{ key: string; data: any; timestamp: number }>>([]);\n\n  const loadSavedForms = () => {\n    try {\n      const keys = Object.keys(localStorage);\n      const formKeys = keys.filter(key => key.startsWith('jt_form_'));\n      const forms = formKeys.map(key => {\n        try {\n          const data = JSON.parse(localStorage.getItem(key) || '{}');\n          return { key, data, timestamp: data.timestamp || 0 };\n        } catch {\n          return { key, data: {}, timestamp: 0 };\n        }\n      }).sort((a, b) => b.timestamp - a.timestamp);\n      \n      setSavedForms(forms);\n    } catch (error) {\n      console.warn('Job Tracker: Failed to load saved forms:', error);\n    }\n  };\n\n  const clearForm = (key: string) => {\n    try {\n      localStorage.removeItem(key);\n      loadSavedForms();\n      console.log('Job Tracker: Form cleared:', key);\n    } catch (error) {\n      console.warn('Job Tracker: Failed to clear form:', error);\n    }\n  };\n\n  const clearAllForms = () => {\n    try {\n      const keys = Object.keys(localStorage);\n      const formKeys = keys.filter(key => key.startsWith('jt_form_'));\n      formKeys.forEach(key => localStorage.removeItem(key));\n      setSavedForms([]);\n      console.log('Job Tracker: All forms cleared');\n    } catch (error) {\n      console.warn('Job Tracker: Failed to clear all forms:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadSavedForms();\n    \n    // Listen for storage changes\n    const handleStorageChange = () => loadSavedForms();\n    window.addEventListener('storage', handleStorageChange);\n    \n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  return { savedForms, clearForm, clearAllForms, loadSavedForms };\n}\n\nexport const Options: React.FC = () => {\n  const [sheetId, setSheetId] = useState(\"\");\n  const [sheetName, setSheetName] = useState(\n    DEFAULT_SHEET_NAME\n  );\n  const { savedForms, clearForm, clearAllForms } = useFormProtectionManagement();\n\n  useEffect(() => {\n    chrome.storage.local.get(\n      [STORAGE_KEYS.sheetId, STORAGE_KEYS.sheetName],\n      (r) => {\n        setSheetId(\n          (r as any)[STORAGE_KEYS.sheetId] || \"\"\n        );\n        setSheetName(\n          (r as any)[STORAGE_KEYS.sheetName] ||\n            DEFAULT_SHEET_NAME\n        );\n      }\n    );\n  }, []);\n\n  async function save() {\n    const payload = {\n      [STORAGE_KEYS.sheetId]: sheetId.trim(),\n      [STORAGE_KEYS.sheetName]:\n        sheetName.trim() || DEFAULT_SHEET_NAME,\n    } as any;\n    await chrome.storage.local.set(payload);\n    const resp = await chrome.runtime.sendMessage({\n      type: \"JT_SET_CONFIG\",\n      sheetId,\n      sheetName,\n    });\n    if (!resp?.ok)\n      alert(resp?.error || \"Failed to save\");\n    else alert(\"Saved\");\n  }\n\n  async function authorize() {\n    const resp = await chrome.runtime.sendMessage({\n      type: \"JT_AUTHORIZE\",\n    });\n    if (!resp?.ok)\n      alert(resp?.error || \"Authorization failed\");\n    else alert(\"Connected to Google\");\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-slate-900\">\n      <div className=\"text-xl font-bold mb-4\">\n        Job Tracker Settings\n      </div>\n      \n      {/* Google Sheets Configuration */}\n      <div className=\"border rounded-xl p-4 space-y-3 mb-6\">\n        <div className=\"text-lg font-semibold mb-3\">Google Sheets Configuration</div>\n        <div>\n          <label className=\"text-xs text-slate-500\">\n            Google Sheet ID\n          </label>\n          <input\n            className=\"w-full mt-1 p-2 border rounded-lg\"\n            placeholder=\"1AbCDEFghiJKLmnopQRSTuvWXyz...\"\n            value={sheetId}\n            onChange={(e) =>\n              setSheetId(e.target.value)\n            }\n          />\n        </div>\n        <div>\n          <label className=\"text-xs text-slate-500\">\n            Sheet Name (tab)\n          </label>\n          <input\n            className=\"w-full mt-1 p-2 border rounded-lg\"\n            placeholder=\"Sheet1\"\n            value={sheetName}\n            onChange={(e) =>\n              setSheetName(e.target.value)\n            }\n          />\n        </div>\n        <div className=\"text-xs text-slate-500\">\n          Find the ID in the spreadsheet URL:\n          https://docs.google.com/spreadsheets/d/\n          <strong>ID</strong>/edit\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            className=\"px-3 py-2 rounded-lg bg-blue-600 text-white\"\n            onClick={save}\n          >\n            Save\n          </button>\n          <button\n            className=\"px-3 py-2 rounded-lg border\"\n            onClick={authorize}\n          >\n            Connect Google\n          </button>\n        </div>\n      </div>\n\n      {/* Form Protection Management */}\n      <div className=\"border rounded-xl p-4 space-y-3\">\n        <div className=\"text-lg font-semibold mb-3\">Form Protection Management</div>\n        \n        {savedForms.length > 0 ? (\n          <div className=\"space-y-3\">\n            <div className=\"text-sm text-slate-600\">\n              {savedForms.length} form{savedForms.length > 1 ? 's' : ''} with unsaved data:\n            </div>\n            \n            {savedForms.map((form) => (\n              <div key={form.key} className=\"p-3 bg-slate-50 rounded-lg border\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div className=\"text-sm font-medium text-slate-700\">\n                    {form.key.replace('jt_form_', 'Form: ')}\n                  </div>\n                  <button\n                    onClick={() => clearForm(form.key)}\n                    className=\"text-xs text-red-600 hover:text-red-800 underline\"\n                  >\n                    Clear\n                  </button>\n                </div>\n                <div className=\"text-xs text-slate-500\">\n                  Last saved: {new Date(form.timestamp).toLocaleString()}\n                </div>\n                <div className=\"text-xs text-slate-600 mt-1\">\n                  Fields: {Object.keys(form.data).length}\n                </div>\n              </div>\n            ))}\n            \n            <button\n              onClick={clearAllForms}\n              className=\"w-full px-3 py-2 rounded-lg border border-red-300 text-red-600 hover:bg-red-50\"\n            >\n              Clear All Saved Forms\n            </button>\n          </div>\n        ) : (\n          <div className=\"text-sm text-slate-500 text-center py-4\">\n            No forms with unsaved data found\n          </div>\n        )}\n        \n        <div className=\"text-xs text-slate-500 space-y-1\">\n          <div>• Auto-save runs every 3 seconds when typing</div>\n          <div>• Data is restored when you return to the page</div>\n          <div>• Forms are cleared after successful submission</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @format */\n\nimport React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Options } from \"./ui/Options\";\nimport \"../styles/tailwind.css\";\n\nconst container = document.getElementById(\"root\")!;\nconst root = createRoot(container);\nroot.render(<Options />);\n"],"names":["useFormProtectionManagement","savedForms","setSavedForms","useState","loadSavedForms","forms","key","data","b","error","clearForm","clearAllForms","useEffect","handleStorageChange","Options","sheetId","setSheetId","sheetName","setSheetName","DEFAULT_SHEET_NAME","STORAGE_KEYS","r","save","payload","resp","authorize","jsxs","jsx","e","form","container","root","createRoot"],"mappings":"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"}