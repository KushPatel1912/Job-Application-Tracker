{"version":3,"file":"background.ts-CZzFjqDd.js","sources":["../../src/shared/auth.ts","../../src/background.ts"],"sourcesContent":["/** @format */\n\nexport type RuntimeConfig = {\n  oauthClientId: string;\n  oauthScopes?: string[];\n  // Optional override to force a specific extension ID for redirect origin\n  // e.g., \"pnefkkhoflibkknpbpljgdghgicomaad\" so redirect becomes\n  // https://pnefkkhoflibkknpbpljgdghgicomaad.chromiumapp.org/\n  redirectExtensionId?: string;\n};\n\nfunction normalize(raw: any): RuntimeConfig {\n  if (!raw) throw new Error('Missing config');\n  // Support both { oauthClientId } and { client_id }\n  const oauthClientId = raw.oauthClientId || raw.client_id || raw.clientId || '';\n  const oauthScopes = Array.isArray(raw.oauthScopes) ? raw.oauthScopes : raw.scopes;\n  const redirectExtensionId = raw.redirectExtensionId || raw.redirect_extension_id || raw.extension_id || undefined;\n  return { oauthClientId, oauthScopes, redirectExtensionId };\n}\n\nexport async function loadRuntimeConfig(): Promise<RuntimeConfig> {\n  // Primary: fetch from public root (Vite copies public/ -> dist/)\n  try {\n    const res = await fetch('/config.json', { cache: 'no-store' });\n    if (res.ok) return normalize(await res.json());\n  } catch (_) {}\n\n  // Extension-safe absolute fallback\n  try {\n    const url = chrome.runtime.getURL('config.json');\n    const res = await fetch(url, { cache: 'no-store' });\n    if (res.ok) return normalize(await res.json());\n  } catch (_) {}\n\n  // Optional example fallback for local dev\n  try {\n    const exUrl = chrome.runtime.getURL('config.example.json');\n    const exRes = await fetch(exUrl, { cache: 'no-store' });\n    if (exRes.ok) return normalize(await exRes.json());\n  } catch (_) {}\n\n  throw new Error('Failed to load config.json');\n}\n\n\n","/** @format */\n\nimport {\n  DEFAULT_SHEET_NAME,\n  STORAGE_KEYS,\n} from \"./shared/types\";\nimport { loadRuntimeConfig } from './shared/auth';\n\n// use runtime config loader from public/\n\nfunction getFromStorage<T extends string>(keys: T[]) {\n  return new Promise<Record<T, any>>((resolve) =>\n    chrome.storage.local.get(keys, (r) =>\n      resolve(r as Record<T, any>)\n    )\n  );\n}\n\nfunction setInStorage(obj: Record<string, any>) {\n  return new Promise<void>((resolve) =>\n    chrome.storage.local.set(obj, () => resolve())\n  );\n}\n\nasync function ensureAccessToken(\n  interactive = true\n): Promise<string> {\n  const {\n    [STORAGE_KEYS.accessToken]: token,\n    [STORAGE_KEYS.accessTokenExpiry]: expiry,\n  } = await getFromStorage([\n    STORAGE_KEYS.accessToken,\n    STORAGE_KEYS.accessTokenExpiry,\n  ]);\n  const now = Date.now();\n  if (\n    token &&\n    typeof expiry === \"number\" &&\n    now < expiry - 60_000\n  ) {\n    return token as string;\n  }\n  return await authorizeWithGoogle(interactive);\n}\n\nfunction buildAuthUrl({\n  clientId,\n  scopes,\n  redirectUri,\n}: {\n  clientId: string;\n  scopes: string[];\n  redirectUri: string;\n}) {\n  const authBase =\n    \"https://accounts.google.com/o/oauth2/v2/auth\";\n  const params = new URLSearchParams({\n    client_id: clientId,\n    response_type: \"token\",\n    redirect_uri: redirectUri,\n    scope: scopes.join(\" \"),\n    include_granted_scopes: \"true\",\n    prompt: \"consent\",\n  });\n  return `${authBase}?${params.toString()}`;\n}\n\nasync function authorizeWithGoogle(\n  interactive = true\n): Promise<string> {\n  const config = await loadRuntimeConfig();\n  if (!config.oauthClientId) {\n    throw new Error(\n      \"Missing oauthClientId in config.json\"\n    );\n  }\n  const redirectExtensionId = config.redirectExtensionId || chrome.runtime.id;\n  const redirectUri = `https://${redirectExtensionId}.chromiumapp.org/`;\n  const scopes =\n    Array.isArray(config.oauthScopes) &&\n    config.oauthScopes.length > 0\n      ? config.oauthScopes\n      : [\n          \"https://www.googleapis.com/auth/spreadsheets\",\n        ];\n\n  const authUrl = buildAuthUrl({ clientId: config.oauthClientId, scopes, redirectUri });\n\n  const redirectUrl = await new Promise<string>(\n    (resolve, reject) => {\n      chrome.identity.launchWebAuthFlow(\n        { url: authUrl, interactive },\n        (responseUrl) => {\n          if (chrome.runtime.lastError) {\n            reject(\n              new Error(\n                chrome.runtime.lastError.message\n              )\n            );\n            return;\n          }\n          resolve(responseUrl as string);\n        }\n      );\n    }\n  );\n\n  const fragment = new URL(redirectUrl).hash.substring(\n    1\n  );\n  const params = new URLSearchParams(fragment);\n  const accessToken = params.get(\"access_token\");\n  const expiresIn = Number(\n    params.get(\"expires_in\") || \"3600\"\n  );\n  if (!accessToken) {\n    throw new Error(\n      \"Authorization failed: no access_token\"\n    );\n  }\n  const expiry = Date.now() + expiresIn * 1000;\n  await setInStorage({\n    [STORAGE_KEYS.accessToken]: accessToken,\n    [STORAGE_KEYS.accessTokenExpiry]: expiry,\n  });\n  return accessToken;\n}\n\nasync function appendRowToSheet(values: string[]) {\n  const {\n    [STORAGE_KEYS.sheetId]: sheetId,\n    [STORAGE_KEYS.sheetName]: sheetNameStored,\n  } = await getFromStorage([\n    STORAGE_KEYS.sheetId,\n    STORAGE_KEYS.sheetName,\n  ]);\n  const sheetName =\n    (sheetNameStored as string) || DEFAULT_SHEET_NAME;\n  if (!sheetId) {\n    throw new Error(\n      \"Sheet not configured. Set it in the extension options.\"\n    );\n  }\n  const token = await ensureAccessToken(true);\n  const endpoint = `https://sheets.googleapis.com/v4/spreadsheets/${encodeURIComponent(\n    sheetId as string\n  )}/values/${encodeURIComponent(\n    sheetName\n  )}!A1:append?valueInputOption=USER_ENTERED&insertDataOption=INSERT_ROWS`;\n  const body = {\n    values: [values],\n    majorDimension: \"ROWS\",\n  } as const;\n  const resp = await fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  if (!resp.ok) {\n    const text = await resp.text();\n    throw new Error(\n      `Sheets API error: ${resp.status} ${text}`\n    );\n  }\n  return await resp.json();\n}\n\nfunction todayUsDate(): string {\n  const d = new Date();\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  const yyyy = d.getFullYear();\n  return `${mm}/${dd}/${yyyy}`;\n}\n\nasync function handleJobSubmission(payload: any) {\n  const company = payload.company || '';\n  const location = payload.location || '';\n  const title = payload.title || '';\n  const workMode = payload.workMode || '';\n  const applicationDate = payload.applicationDate || todayUsDate();\n  const url = payload.url || '';\n  const resume = payload.resume || '';\n  const status = 'Pending';\n\n  const row = [company, location, title, workMode, applicationDate, url, resume, status];\n\n  try {\n    await appendRowToSheet(row);\n    const summary = {\n      company,\n      title,\n      date: applicationDate,\n    };\n    await setInStorage({\n      [STORAGE_KEYS.lastSubmission]: summary,\n      [STORAGE_KEYS.lastStatus]: {\n        ok: true,\n        message: 'Saved',\n      },\n    });\n    return { ok: true };\n  } catch (error: any) {\n    await setInStorage({\n      [STORAGE_KEYS.lastStatus]: {\n        ok: false,\n        message: String(error?.message || error),\n      },\n    });\n    return {\n      ok: false,\n      error: String(error?.message || error),\n    };\n  }\n}\n\nchrome.runtime.onMessage.addListener(\n  (message, _sender, sendResponse) => {\n    (async () => {\n      try {\n        if (\n          message &&\n          message.type === \"JOB_APPLICATION_SUBMITTED\"\n        ) {\n          const result = await handleJobSubmission(\n            message.payload || {}\n          );\n          sendResponse(result);\n          return;\n        }\n        if (\n          message &&\n          message.type === \"JT_AUTHORIZE\"\n        ) {\n          await ensureAccessToken(true);\n          sendResponse({ ok: true });\n          return;\n        }\n        if (\n          message &&\n          message.type === \"JT_GET_CONFIG\"\n        ) {\n          const {\n            [STORAGE_KEYS.sheetId]: sheetId,\n            [STORAGE_KEYS.sheetName]: sheetName,\n          } = await getFromStorage([\n            STORAGE_KEYS.sheetId,\n            STORAGE_KEYS.sheetName,\n          ]);\n          sendResponse({\n            ok: true,\n            sheetId: (sheetId as string) || \"\",\n            sheetName:\n              (sheetName as string) ||\n              DEFAULT_SHEET_NAME,\n          });\n          return;\n        }\n        if (\n          message &&\n          message.type === \"JT_SET_CONFIG\"\n        ) {\n          const updates: Record<string, string> = {};\n          if (typeof message.sheetId === \"string\")\n            updates[STORAGE_KEYS.sheetId] =\n              message.sheetId.trim();\n          if (typeof message.sheetName === \"string\")\n            updates[STORAGE_KEYS.sheetName] =\n              (message.sheetName as string).trim() ||\n              DEFAULT_SHEET_NAME;\n          await setInStorage(updates);\n          sendResponse({ ok: true });\n          return;\n        }\n        sendResponse({\n          ok: false,\n          error: \"Unknown message\",\n        });\n      } catch (error: any) {\n        sendResponse({\n          ok: false,\n          error: String(error?.message || error),\n        });\n      }\n    })();\n    return true; // keep message channel open for async\n  }\n);\n"],"names":["normalize","raw","oauthClientId","oauthScopes","redirectExtensionId","loadRuntimeConfig","res","url","exUrl","exRes","getFromStorage","keys","resolve","r","setInStorage","obj","ensureAccessToken","interactive","STORAGE_KEYS","token","expiry","now","authorizeWithGoogle","buildAuthUrl","clientId","scopes","redirectUri","authBase","params","config","authUrl","redirectUrl","reject","responseUrl","fragment","accessToken","expiresIn","appendRowToSheet","values","sheetId","sheetNameStored","sheetName","DEFAULT_SHEET_NAME","endpoint","body","resp","text","todayUsDate","d","mm","dd","yyyy","handleJobSubmission","payload","company","location","title","workMode","applicationDate","resume","row","summary","error","message","_sender","sendResponse","result","updates"],"mappings":"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"}