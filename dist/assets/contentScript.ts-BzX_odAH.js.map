{"version":3,"file":"contentScript.ts-BzX_odAH.js","sources":["../../src/contentScript.ts"],"sourcesContent":["/** @format */\n\n// Content script: heuristically capture job application data on form submission or apply button click\n// Enhanced with form protection features\n\nconst JT_DEBOUNCE_MS = 8000;\nconst AUTO_SAVE_INTERVAL = 3000; // 3 seconds\nlet jtLastSubmitAt = 0;\nlet hasUnsavedChanges = false;\nlet autoSaveInterval: NodeJS.Timeout | null = null;\nlet isSubmitting = false;\n\n// Form protection: Track form state and prevent data loss\ninterface FormState {\n  formId: string;\n  timestamp: number;\n  data: Record<string, any>;\n}\n\nfunction normalizedText(\n  node: Element | null | undefined\n): string {\n  return (\n    (node as any)?.innerText ||\n    (node as any)?.textContent ||\n    \"\"\n  ).trim();\n}\n\nfunction includesAny(\n  text: string,\n  keywords: string[]\n) {\n  const t = (text || \"\").toLowerCase();\n  return keywords.some((k) => t.includes(k));\n}\n\nfunction getInputValue(el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | null): string {\n  if (!el) return \"\";\n  const tag = (el.tagName || \"\").toUpperCase();\n  const type =\n    (el as HTMLInputElement).type?.toLowerCase?.() ||\n    \"\";\n  if (type === \"checkbox\")\n    return (el as HTMLInputElement).checked\n      ? \"Yes\"\n      : \"No\";\n  if (tag === \"SELECT\") {\n    const sel = el as HTMLSelectElement;\n    return (\n      sel.options?.[sel.selectedIndex]?.text ||\n      sel.value ||\n      \"\"\n    );\n  }\n  return (el as HTMLInputElement).value || \"\";\n}\n\n// Form protection: Generate unique form ID\nfunction generateFormId(form: HTMLFormElement): string {\n  if (form.id) return form.id;\n  if (form.action) return form.action.split('/').pop() || 'unknown';\n  return `form_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// Form protection: Save form data to localStorage\nfunction saveFormData(form: HTMLFormElement): void {\n  try {\n    const formId = generateFormId(form);\n    const formData = new FormData(form);\n    const data: Record<string, any> = {};\n    \n    for (const [key, value] of formData.entries()) {\n      data[key] = value;\n    }\n    \n    const formState: FormState = {\n      formId,\n      timestamp: Date.now(),\n      data\n    };\n    \n    localStorage.setItem(`jt_form_${formId}`, JSON.stringify(formState));\n    hasUnsavedChanges = true;\n  } catch (error) {\n    console.warn('Job Tracker: Failed to save form data:', error);\n  }\n}\n\n// Form protection: Restore form data from localStorage\nfunction restoreFormData(form: HTMLFormElement): void {\n  try {\n    const formId = generateFormId(form);\n    const saved = localStorage.getItem(`jt_form_${formId}`);\n    \n    if (saved) {\n      const formState: FormState = JSON.parse(saved);\n      const { data } = formState;\n      \n      // Restore form values\n      Object.entries(data).forEach(([key, value]) => {\n        const field = form.querySelector(`[name=\"${key}\"]`) as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n        if (field) {\n          if (field.type === 'checkbox') {\n            (field as HTMLInputElement).checked = value === 'Yes' || value === true;\n          } else if (field.tagName === 'SELECT') {\n            (field as HTMLSelectElement).value = value;\n          } else {\n            (field as HTMLInputElement).value = value;\n          }\n        }\n      });\n      \n      hasUnsavedChanges = true;\n      console.log('Job Tracker: Form data restored from localStorage');\n    }\n  } catch (error) {\n    console.warn('Job Tracker: Failed to restore form data:', error);\n  }\n}\n\n// Form protection: Clear saved form data\nfunction clearFormData(form: HTMLFormElement): void {\n  try {\n    const formId = generateFormId(form);\n    localStorage.removeItem(`jt_form_${formId}`);\n    hasUnsavedChanges = false;\n  } catch (error) {\n    console.warn('Job Tracker: Failed to clear form data:', error);\n  }\n}\n\n// Form protection: Start auto-save for a form\nfunction startAutoSave(form: HTMLFormElement): void {\n  if (autoSaveInterval) {\n    clearInterval(autoSaveInterval);\n  }\n  \n  autoSaveInterval = setInterval(() => {\n    if (hasUnsavedChanges && !isSubmitting) {\n      saveFormData(form);\n    }\n  }, AUTO_SAVE_INTERVAL);\n}\n\n// Form protection: Stop auto-save\nfunction stopAutoSave(): void {\n  if (autoSaveInterval) {\n    clearInterval(autoSaveInterval);\n    autoSaveInterval = null;\n  }\n}\n\n// Form protection: Add loading state to submit button\nfunction addLoadingState(form: HTMLFormElement): void {\n  const submitBtn = form.querySelector('button[type=\"submit\"], input[type=\"submit\"]') as HTMLButtonElement | HTMLInputElement;\n  if (submitBtn) {\n    submitBtn.disabled = true;\n    const originalText = submitBtn.value || submitBtn.textContent || 'Submit';\n    submitBtn.setAttribute('data-original-text', originalText);\n    submitBtn.value = submitBtn.textContent = 'Submitting...';\n    \n    // Add loading spinner if it's a button\n    if (submitBtn.tagName === 'BUTTON') {\n      submitBtn.innerHTML = '<span class=\"loading-spinner\">‚è≥</span> Submitting...';\n    }\n  }\n}\n\n// Form protection: Remove loading state from submit button\nfunction removeLoadingState(form: HTMLFormElement): void {\n  const submitBtn = form.querySelector('button[type=\"submit\"], input[type=\"submit\"]') as HTMLButtonElement | HTMLInputElement;\n  if (submitBtn) {\n    submitBtn.disabled = false;\n    const originalText = submitBtn.getAttribute('data-original-text') || 'Submit';\n    submitBtn.value = submitBtn.textContent = originalText;\n    \n    if (submitBtn.tagName === 'BUTTON') {\n      submitBtn.innerHTML = originalText;\n    }\n  }\n}\n\n// Form protection: beforeunload event handler\nfunction handleBeforeUnload(event: BeforeUnloadEvent): void {\n  if (hasUnsavedChanges && !isSubmitting) {\n    event.preventDefault();\n    event.returnValue = 'You have unsaved changes. Are you sure you want to leave?';\n    return 'You have unsaved changes. Are you sure you want to leave?';\n  }\n}\n\n// Form protection: Track input changes\nfunction handleInputChange(event: Event): void {\n  const target = event.target as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n  if (target && target.form) {\n    hasUnsavedChanges = true;\n    saveFormData(target.form);\n  }\n}\n\nfunction findByLabel(\n  form: Element | Document,\n  keywordList: string[]\n) {\n  const labels = form\n    ? Array.from(form.querySelectorAll(\"label\"))\n    : [];\n  for (const label of labels) {\n    const labelText =\n      normalizedText(label).toLowerCase();\n    if (!labelText) continue;\n    if (\n      keywordList.some((k) => labelText.includes(k))\n    ) {\n      const forId = label.getAttribute(\"for\");\n      if (forId) {\n        const target = form.querySelector(\n          `#${CSS.escape(forId)}`\n        ) as any;\n        const v = getInputValue(target);\n        if (v) return v.trim();\n      }\n      const input = label.querySelector(\n        \"input,select,textarea\"\n      ) as any;\n      const v2 = getInputValue(input);\n      if (v2) return v2.trim();\n    }\n  }\n  return \"\";\n}\n\nfunction findByAttr(\n  form: Element | Document,\n  keywordList: string[]\n) {\n  const fields = Array.from(\n    form?.querySelectorAll(\"input,select,textarea\") ||\n      []\n  );\n  for (const field of fields) {\n    const name = (\n      field.getAttribute(\"name\") || \"\"\n    ).toLowerCase();\n    const id = ((field as any).id || \"\").toLowerCase();\n    const aria = (\n      field.getAttribute(\"aria-label\") || \"\"\n    ).toLowerCase();\n    const placeholder = (\n      field.getAttribute(\"placeholder\") || \"\"\n    ).toLowerCase();\n    const hay = `${name} ${id} ${aria} ${placeholder}`;\n    if (keywordList.some((k) => hay.includes(k))) {\n      const v = getInputValue(field as any);\n      if (v) return v.trim();\n    }\n  }\n  return \"\";\n}\n\nfunction findResumeFilename(\n  form?: Element | Document | null\n) {\n  const inputs = Array.from(\n    form?.querySelectorAll('input[type=\"file\"]') || []\n  );\n  for (const input of inputs) {\n    const fileInput = input as HTMLInputElement;\n    if (\n      fileInput.files &&\n      fileInput.files.length > 0\n    ) {\n      return fileInput.files[0]?.name || \"\";\n    }\n    if (fileInput.value) {\n      const parts = fileInput.value.split(/[\\\\/]/);\n      return parts[parts.length - 1] || \"\";\n    }\n  }\n  return \"\";\n}\n\nfunction pageHeuristics() {\n  const titleMeta = document.querySelector(\n    'meta[property=\"og:title\"], meta[name=\"title\"]'\n  );\n  const titleCandidate =\n    titleMeta?.getAttribute(\"content\") ||\n    document.title ||\n    \"\";\n  \n  // Enhanced company detection from multiple sources\n  let companyCandidate = '';\n  \n  // 1. Try meta tags first\n  const companyMeta = document.querySelector('meta[property=\"og:site_name\"], meta[name=\"author\"], meta[property=\"article:author\"]');\n  if (companyMeta) {\n    companyCandidate = normalizedText(companyMeta);\n  }\n  \n  // 2. Try logo/header area company names\n  if (!companyCandidate) {\n    // Look for company names in header/nav areas\n    const headerSelectors = [\n      'header [class*=\"logo\"]',\n      'header [class*=\"brand\"]', \n      'header [class*=\"company\"]',\n      'nav [class*=\"logo\"]',\n      'nav [class*=\"brand\"]',\n      '.logo',\n      '.brand',\n      '[data-test*=\"logo\"]',\n      '[data-test*=\"brand\"]',\n      '[class*=\"header\"] [class*=\"company\"]',\n      '[class*=\"navbar\"] [class*=\"company\"]'\n    ];\n    \n    for (const selector of headerSelectors) {\n      const element = document.querySelector(selector);\n      if (element) {\n        const text = normalizedText(element);\n        if (text && text.length > 0 && text.length < 50) {\n          companyCandidate = text;\n          break;\n        }\n      }\n    }\n  }\n  \n  // 3. Try common company name patterns in page content\n  if (!companyCandidate) {\n    const companyEl = document.querySelector(\n      '[data-company-name], [class*=\"company\" i], [class*=\"employer\" i]'\n    );\n    companyCandidate = normalizedText(companyEl || undefined);\n  }\n  \n  // 4. Try extracting from URL if it's a company domain\n  if (!companyCandidate) {\n    const hostname = window.location.hostname;\n    if (hostname && !hostname.includes('localhost') && !hostname.includes('127.0.0.1')) {\n      const domainParts = hostname.split('.');\n      if (domainParts.length >= 2) {\n        const companyFromDomain = domainParts[domainParts.length - 2];\n        if (companyFromDomain && companyFromDomain.length > 2) {\n          companyCandidate = companyFromDomain.charAt(0).toUpperCase() + companyFromDomain.slice(1);\n        }\n      }\n    }\n  }\n  \n  const locationEl = document.querySelector(\n    '[class*=\"location\" i], [data-test*=\"location\" i]'\n  );\n  const locationCandidate = normalizedText(\n    locationEl || undefined\n  );\n  const bodyText =\n    document.body?.innerText?.toLowerCase() || \"\";\n  let workMode = \"\";\n  if (bodyText.includes(\"remote\")) workMode = \"Remote\";\n  else if (bodyText.includes(\"hybrid\"))\n    workMode = \"Hybrid\";\n  else if (\n    bodyText.includes(\"on-site\") ||\n    bodyText.includes(\"onsite\") ||\n    bodyText.includes(\"on site\")\n  )\n    workMode = \"On-site\";\n  return {\n    title: titleCandidate,\n    company: companyCandidate,\n    location: locationCandidate,\n    workMode,\n  };\n}\n\n// Determine if a form/page is a likely job application, to avoid random forms (login, newsletter, etc.)\nfunction isLikelyJobApplication(\n  form?: Element | Document | null\n) {\n  const urlStr = (location.href || \"\").toLowerCase();\n  const urlVendors = [\n    \"greenhouse\",\n    \"lever.co\",\n    \"boards.greenhouse.io\",\n    \"workday\",\n    \"myworkdayjobs\",\n    \"ashbyhq\",\n    \"ashby\",\n    \"smartrecruiters\",\n    \"workable\",\n    \"icims\",\n    \"bamboohr\",\n    \"jobs.lever\",\n    \"workforcenow\",\n    \"jobvite\",\n    \"recruitee\",\n    \"lever\",\n    \"greenhouse.io\",\n  ];\n  const urlLikely =\n    urlVendors.some((v) => urlStr.includes(v)) ||\n    includesAny(urlStr, [\n      \"job\",\n      \"jobs\",\n      \"careers\",\n      \"apply\",\n    ]);\n\n  const scope = (form as Element) || document;\n  const fields = Array.from(\n    scope.querySelectorAll(\"input,select,textarea\")\n  ) as HTMLInputElement[];\n  const hasPassword = fields.some(\n    (f) =>\n      (f.getAttribute(\"type\") || \"\").toLowerCase() ===\n      \"password\"\n  );\n  if (hasPassword) return false;\n\n  const textOnPage = (\n    document.body?.innerText || \"\"\n  ).toLowerCase();\n  const hasJobKeywordsOnPage = includesAny(\n    textOnPage,\n    [\n      \"apply\",\n      \"job\",\n      \"position\",\n      \"role\",\n      \"employment\",\n      \"experience\",\n      \"resume\",\n      \"cv\",\n      \"cover letter\",\n    ]\n  );\n  const hasResumeInput = fields.some(\n    (f) =>\n      (f.getAttribute(\"type\") || \"\").toLowerCase() ===\n      \"file\"\n  );\n  const hasCoverLetterField = fields.some((f) => {\n    const name = (\n      f.getAttribute(\"name\") || \"\"\n    ).toLowerCase();\n    const id = (f.id || \"\").toLowerCase();\n    const aria = (\n      f.getAttribute(\"aria-label\") || \"\"\n    ).toLowerCase();\n    const placeholder = (\n      f.getAttribute(\"placeholder\") || \"\"\n    ).toLowerCase();\n    const hay = `${name} ${id} ${aria} ${placeholder}`;\n    return includesAny(hay, [\"cover\", \"cover letter\"]);\n  });\n  const submitButtons = Array.from(\n    scope.querySelectorAll(\n      'button,input[type=\"submit\"], [role=\"button\"]'\n    )\n  );\n  const hasApplyButton = submitButtons.some((btn) =>\n    includesAny(\n      (\n        (btn as HTMLElement).innerText ||\n        (btn as HTMLInputElement).value ||\n        btn.textContent ||\n        \"\"\n      )\n        .trim()\n        .toLowerCase(),\n      [\n        \"apply\",\n        \"submit application\",\n        \"send application\",\n        \"apply now\",\n        \"submit\",\n      ]\n    )\n  );\n  const meaningfulFields = fields.filter((f) => {\n    const type = (\n      f.getAttribute(\"type\") || \"\"\n    ).toLowerCase();\n    return (\n      [\"hidden\", \"button\", \"submit\", \"reset\"].indexOf(\n        type\n      ) === -1\n    );\n  });\n  const fieldCountOk =\n    meaningfulFields.length >= 3 ||\n    hasResumeInput ||\n    hasCoverLetterField;\n  const signals = [\n    urlLikely,\n    hasJobKeywordsOnPage,\n    hasResumeInput,\n    hasCoverLetterField,\n    hasApplyButton,\n    fieldCountOk,\n  ];\n  const strongSignalCount =\n    signals.filter(Boolean).length;\n  return strongSignalCount >= 2 && !hasPassword;\n}\n\n// Helper: format date as MM/DD/YYYY\nfunction formatUsDate(d: Date): string {\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  const yyyy = d.getFullYear();\n  return `${mm}/${dd}/${yyyy}`;\n}\n\nfunction extractJobData(\n  form?: Element | Document | null\n) {\n  const nowUs = formatUsDate(new Date());\n  const url = location.href;\n  const companyKeywords = [\n    \"company\",\n    \"organisation\",\n    \"organization\",\n    \"employer\",\n    \"org\",\n  ];\n  const locationKeywords = [\n    \"location\",\n    \"city\",\n    \"state\",\n    \"country\",\n  ];\n  const titleKeywords = [\n    \"title\",\n    \"position\",\n    \"role\",\n    \"job title\",\n  ];\n  const modeKeywords = [\n    \"remote\",\n    \"hybrid\",\n    \"on-site\",\n    \"onsite\",\n    \"on site\",\n    \"work type\",\n    \"work mode\",\n  ];\n  const scope = (form as Element) || document;\n  const byLabel = {\n    company: findByLabel(scope, companyKeywords),\n    location: findByLabel(scope, locationKeywords),\n    title: findByLabel(scope, titleKeywords),\n    workMode: findByLabel(scope, modeKeywords),\n  };\n  const byAttr = {\n    company:\n      byLabel.company ||\n      findByAttr(scope, companyKeywords),\n    location:\n      byLabel.location ||\n      findByAttr(scope, locationKeywords),\n    title:\n      byLabel.title || findByAttr(scope, titleKeywords),\n    workMode:\n      byLabel.workMode ||\n      findByAttr(scope, modeKeywords),\n  };\n  const heur = pageHeuristics();\n  const resume = findResumeFilename(scope);\n  return {\n    company: byAttr.company || heur.company || \"\",\n    location: byAttr.location || heur.location || \"\",\n    title: byAttr.title || heur.title || \"\",\n    workMode: byAttr.workMode || heur.workMode || \"\",\n    applicationDate: nowUs,\n    url,\n    resume,\n  };\n}\n\nasync function sendSubmission(data: any) {\n  try {\n    const response = await chrome.runtime.sendMessage({\n      type: \"JOB_APPLICATION_SUBMITTED\",\n      payload: data,\n    });\n    return response;\n  } catch (e: any) {\n    return {\n      ok: false,\n      error: String(e?.message || e),\n    };\n  }\n}\n\n// Enhanced form submission handler with protection - only capture on actual form submissions\nfunction handleSubmitEvent(e: Event) {\n  const now = Date.now();\n  if (now - jtLastSubmitAt < JT_DEBOUNCE_MS) return;\n  \n  const form = e.target instanceof HTMLFormElement ? e.target : null;\n  if (!form || !isLikelyJobApplication(form)) return;\n  \n  // Prevent double submission\n  if (isSubmitting) {\n    e.preventDefault();\n    return;\n  }\n  \n  // Only proceed if this is an actual form submission (not just a button click)\n  if (e.type !== 'submit') {\n    return;\n  }\n  \n  // Add loading state\n  isSubmitting = true;\n  addLoadingState(form);\n  \n  // Clear auto-save\n  stopAutoSave();\n  \n  // Extract and send data\n  const data = extractJobData(form);\n  \n  // Clear saved form data after successful submission\n  setTimeout(async () => {\n    try {\n      const result = await sendSubmission(data);\n      if (result?.ok) {\n        clearFormData(form);\n        hasUnsavedChanges = false;\n        console.log('Job Tracker: Form submitted successfully, data cleared');\n      }\n    } catch (error) {\n      console.warn('Job Tracker: Submission failed:', error);\n    } finally {\n      // Remove loading state\n      isSubmitting = false;\n      removeLoadingState(form);\n    }\n  }, 10);\n}\n\n// Enhanced click handler with form protection - only trigger on actual form submissions\nfunction handleClickEvent(e: Event) {\n  const el = e.target as HTMLElement | null;\n  if (!el) return;\n  \n  const label = (\n    el.innerText ||\n    el.textContent ||\n    \"\"\n  ).trim();\n  if (!label) return;\n  \n  // Only handle clicks that actually submit forms, not just apply button clicks\n  if (\n    includesAny(label, [\n      \"apply\",\n      \"submit\",\n      \"send application\",\n      \"apply now\",\n      \"submit application\",\n    ])\n  ) {\n    const form = el.closest(\"form\");\n    \n    // Only proceed if this is actually a form submission button\n    if (form && (el.type === 'submit' || el.getAttribute('type') === 'submit')) {\n      // This will be handled by the form submit event, so we don't need to do anything here\n      return;\n    }\n    \n    // For standalone apply buttons that don't submit forms, don't trigger job tracking\n    // The user needs to actually fill out and submit a form\n    console.log('Job Tracker: Apply button clicked, but waiting for actual form submission');\n    return;\n  }\n}\n\n// Form protection: Initialize form monitoring\nfunction initializeFormProtection() {\n  // Add beforeunload listener\n  window.addEventListener('beforeunload', handleBeforeUnload);\n  \n  // Monitor forms for changes\n  document.addEventListener('input', handleInputChange, true);\n  document.addEventListener('change', handleInputChange, true);\n  \n  // Restore form data on page load\n  const forms = document.querySelectorAll('form');\n  forms.forEach(form => {\n    if (isLikelyJobApplication(form)) {\n      restoreFormData(form);\n      startAutoSave(form);\n      \n      // Add form submit listener\n      form.addEventListener('submit', handleSubmitEvent, true);\n    }\n  });\n  \n  // Monitor for dynamically added forms\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          const element = node as Element;\n          const forms = element.querySelectorAll('form');\n          forms.forEach(form => {\n            if (isLikelyJobApplication(form)) {\n              restoreFormData(form);\n              startAutoSave(form);\n              form.addEventListener('submit', handleSubmitEvent, true);\n            }\n          });\n        }\n      });\n    });\n  });\n  \n  observer.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n}\n\nfunction initListeners() {\n  // Initialize form protection\n  initializeFormProtection();\n  \n  // Add existing listeners\n  document.addEventListener(\n    \"submit\",\n    handleSubmitEvent,\n    true\n  );\n  document.addEventListener(\n    \"click\",\n    handleClickEvent,\n    true\n  );\n}\n\n// Cleanup on page unload\nwindow.addEventListener('unload', () => {\n  stopAutoSave();\n  window.removeEventListener('beforeunload', handleBeforeUnload);\n});\n\ninitListeners();\n"],"names":["jtLastSubmitAt","hasUnsavedChanges","autoSaveInterval","isSubmitting","normalizedText","node","includesAny","text","keywords","t","k","getInputValue","el","_a","_b","_c","_d","tag","sel","generateFormId","form","saveFormData","formId","formData","data","key","value","formState","error","restoreFormData","saved","field","clearFormData","startAutoSave","stopAutoSave","addLoadingState","submitBtn","originalText","removeLoadingState","handleBeforeUnload","event","handleInputChange","target","findByLabel","keywordList","labels","label","labelText","forId","v","input","v2","findByAttr","fields","name","id","aria","placeholder","hay","findResumeFilename","inputs","fileInput","parts","pageHeuristics","titleMeta","titleCandidate","companyCandidate","companyMeta","headerSelectors","selector","element","companyEl","hostname","domainParts","companyFromDomain","locationEl","locationCandidate","bodyText","workMode","isLikelyJobApplication","urlStr","urlLikely","scope","hasPassword","f","textOnPage","hasJobKeywordsOnPage","hasResumeInput","hasCoverLetterField","hasApplyButton","btn","fieldCountOk","type","formatUsDate","d","mm","dd","yyyy","extractJobData","nowUs","url","companyKeywords","locationKeywords","titleKeywords","modeKeywords","byLabel","byAttr","heur","resume","sendSubmission","handleSubmitEvent","e","result","handleClickEvent","initializeFormProtection","mutations","mutation","initListeners"],"mappings":"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"}